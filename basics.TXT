CREATE DATABASE D_NAME;
USE DATABASE;
DROP TABLE T_NAME;
TRUNCATE TABLE T_NAME;
ALTER TABLE T_NAME  RENAME TO NEW_NAME ;
SELECT *FROM T_NAME

DATA DEFINATION LANGUAGE 
    CEATE 
        CREATE TABLE TABLE_NAME (COL_N DATATYPE (SIZE));
    ALTER 
        ADD
            TO ADD A COLUMN
            ALTER TABLE T_NAME ADD(COL_N DATATYPE(SIZE));
        MODIFY
            TO MODIFY DATATYPE
            ALTER TABLE T_NAME MODIFY COL_N DATATYPE;
        RENAME
            TO RENAME COLUMN 
            ALTER TABLE T_NAME COLUMN OLD_N TO NEW_N;
        DROP
            TO DROP A COLUMN 
            ALTER TABLE DROP COLUMN COL_N;
DATA MANUPULATION LANGUAGE 
    INSERT 
        INSERT INTO T_NAME VALUES(V1,V2,V3);
        INSERT INTO T_NAME(COL_N,..)VALUES(V1,V2,V3)
    UPDATE 
        UPDATE T_NAME SET COL_N =V1,COL_N=V2 WHERE CONDITION;
    DELETE 
        DELETE FROM T_NAME WHERE CONDITION
        DELETE FROM T_NAME
OPERATORS:
    ARTHEMATIC
        + -ADD
        - -SUB 
        * -MUL 
        / -DIV
    CONDITIONAL
        = -EQUAL
        != -NOT EQUAL
        < -LESSTHAN
        > -GREATERTHAN
        <= -LESSTHAN OR EQUAL
        >= -GREATER THAN OR EQUAL
    LOGICAL
        AND -ALL CONDITION TRUE RETURNS TRUE
        OR-ANY ONE CONDITION IS TRUE RETURNS TRUE
        NOT -INVERSE THE CONDITION
    SPECIAL
        DISTINCT-TO SELCT ONLY UNIQUE VALUES
            SLECT DISTINCT COL_N.. FROM DATA;
        LIKE - USED TO CHECK PATTERN ;
            %- USED TO CHECK UNKNOW VALUES
            _ -IS USED TO REPRESENT SINGLE CHARACTER
        IN - USED TO CHECT MULTIPLE CHOISES
            COL_N IN (V1,V2,V3)
        BETWEEN - USED TO CHECK  VALUES IN RANGES
            COL_N BETWEEN L_R AND H_R;
        IS NULL - TO CHECK NULL VALUES
            COL_N IS NULL;
        AS - USED TO RENAME COL_N IN RESULT
            COL_N AS NEW_N;
        ORDER BY - IS USED TO SORT RESULT
            QUERY ORDER BY COL_NUMBER ASC OR DESC ;
            WE CAN USE MULTIPLE ROWS
            NULLS LAST 
        GROUP BY - USED TO GROUP VALUES BASED ON COLUMN
            QUERY GROUP BY COL_N;
        HAVING - USED TO FILTER GROUPBY USING AGREGATE FUNCTIONS
            QUERY HAVING 
        
AGGREGATE FUNCTIONS
    SUM -USED TO SUM THE COLUMN
        SUM(COL_N)
    MAX - RETURN MAX IN COLUMN
        MAX(COL_N)
    MIN - RETURN MIN IN COLUMN
        MIN(COL_N)
    AVG -IS TO RETURN AVERAGE 
        AVG(COL_N)    
DATA CONTROL LANGUAGE 
    GRANT - IS TO ACCES A USER TO UPDATE OR SELECT FROM DATABASE OR TABLE ;
        GRANT PREVILIAGES ON T_NAME TO USER;
    REVOKE - IS TO DELETE USER ACTIONS ON TABLE ;
        REVOKE PREVILAGES ON T_NAME FROM USER;        